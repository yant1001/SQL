-- 1. 조건에 맞는 도서와 저자 리스트 출력하기
SELECT B.BOOK_ID,
       A.AUTHOR_NAME,
       DATE_FORMAT(B.PUBLISHED_DATE, '%Y-%m-%d') AS PUBLISHED_DATE
FROM BOOK B
LEFT JOIN AUTHOR A
ON B.AUTHOR_ID = A.AUTHOR_ID
WHERE B.CATEGORY = '경제'
ORDER BY PUBLISHED_DATE


-- 2. 상품 별 오프라인 매출 구하기
WITH TEMP_SALES AS (
SELECT P.PRODUCT_CODE,
       SUM(P.PRICE * O.SALES_AMOUNT) SALES
FROM PRODUCT P
LEFT JOIN OFFLINE_SALE O
ON P.PRODUCT_ID = O.PRODUCT_ID
GROUP BY 1
)
SELECT *
FROM TEMP_SALES
ORDER BY SALES DESC,
         PRODUCT_CODE


-- 3. 없어진 기록 찾기
SELECT O.ANIMAL_ID,
       O.NAME
FROM ANIMAL_INS I
RIGHT JOIN ANIMAL_OUTS O
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE I.ANIMAL_ID IS NULL
ORDER BY O.ANIMAL_ID


-- 4. 있었는데요 없었습니다
SELECT O.ANIMAL_ID,
       O.NAME
FROM ANIMAL_INS I
RIGHT JOIN ANIMAL_OUTS O
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE I.DATETIME > O.DATETIME
ORDER BY I.DATETIME 


-- 5. 오랜 기간 보호한 동물(1)
SELECT I.NAME,
       I.DATETIME
FROM ANIMAL_INS I
LEFT JOIN ANIMAL_OUTS O
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE O.ANIMAL_ID IS NULL
ORDER BY I.DATETIME
LIMIT 3


-- 6. 특정 기간 동안 대여 가능한 자동차들의 대여 비용 구하기 (**재도전**)
WITH TEMP_JOIN AS (
SELECT A.CAR_ID,
       A.CAR_TYPE,
       END_DATE,
       DURATION_TYPE,
       ROUND(DAILY_FEE *30 * DISCOUNT_RATE * 0.01, 0) AS FEE
FROM CAR_RENTAL_COMPANY_CAR A
LEFT JOIN CAR_RENTAL_COMPANY_DISCOUNT_PLAN B
ON A.CAR_TYPE = B.CAR_TYPE
LEFT JOIN CAR_RENTAL_COMPANY_RENTAL_HISTORY C
ON A.CAR_ID = C.CAR_ID
)
SELECT DISTINCT(CAR_ID),
       CAR_TYPE,
       FEE
FROM TEMP_JOIN
WHERE CAR_TYPE IN ('세단', 'SUV')
  AND DATE_FORMAT(END_DATE, '%Y-%m-%d') < '2022-11-01'
  AND DURATION_TYPE = '30일 이상'
  AND 500000 <= FEE < 2000000
ORDER BY FEE DESC,
         CAR_TYPE,
         CAR_ID DESC


-- 7. 5월 식품들의 총매출 조회하기
SELECT P.PRODUCT_ID,
       P.PRODUCT_NAME,
       SUM(P.PRICE*O.AMOUNT) AS TOTAL_SALES
FROM FOOD_PRODUCT P
LEFT JOIN FOOD_ORDER O
ON P.PRODUCT_ID = O.PRODUCT_ID
WHERE DATE_FORMAT(O.PRODUCE_DATE, '%Y-%m') = '2022-05'
GROUP BY 1
ORDER BY 3 DESC,
         PRODUCT_ID


-- 8. 주문량이 많은 아이스크림들 조회하기
SELECT FLAVOR
FROM (
SELECT J.FLAVOR,
       SUM(J.TOTAL_ORDER + FH.TOTAL_ORDER) AS TOTAL_ORDER
FROM JULY J
LEFT JOIN FIRST_HALF FH
ON J.FLAVOR = FH.FLAVOR
GROUP BY J.FLAVOR
) A
ORDER BY TOTAL_ORDER DESC
LIMIT 3


-- 9. 그룹별 조건에 맞는 식당 목록 출력하기
SELECT MEMBER_NAME,
       REVIEW_TEXT,
       DATE_FORMAT(REVIEW_DATE, '%Y-%m-%d') AS REVIEW_DATE
FROM MEMBER_PROFILE M
JOIN REST_REVIEW R
ON M.MEMBER_ID = R.MEMBER_ID
WHERE R.MEMBER_ID = (
                      SELECT MEMBER_ID
                      FROM REST_REVIEW
                      GROUP BY MEMBER_ID
                      ORDER BY COUNT(REVIEW_ID) DESC
                      LIMIT 1
                    )
ORDER BY 3, 2


-- 10. 보호소에서 중성화한 동물
SELECT O.ANIMAL_ID,
       O.ANIMAL_TYPE,
       O.NAME
FROM (SELECT *
      FROM ANIMAL_INS
      WHERE SEX_UPON_INTAKE LIKE '%Intact%') I
JOIN ANIMAL_OUTS O
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE O.SEX_UPON_OUTCOME LIKE '%Spayed%' 
   OR O.SEX_UPON_OUTCOME LIKE '%Neutered%'


-- 11. 상품을 구매한 회원 비율 구하기
WITH TEMP_USER_2021 AS (
SELECT *
      FROM USER_INFO
      WHERE YEAR(JOINED) = 2021
),
TEMP_ONLINE_2021 AS (
SELECT *
FROM ONLINE_SALE
WHERE YEAR(SALES_DATE) = 2021
)
SELECT *
FROM 
