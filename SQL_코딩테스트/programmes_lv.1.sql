-- 1. 한 해에 잡은 물고기 수 구하기
SELECT COUNT(ID) AS FISH_COUNT
FROM FISH_INFO
WHERE YEAR(TIME) = 2021


-- 2. 잡은 물고기 중 가장 큰 물고기의 길이 구하기
SELECT CONCAT(MAX(LENGTH), 'cm') AS MAX_LENGTH
FROM FISH_INFO


-- 3. 잡은 물고기의 평균 길이 구하기
SELECT ROUND(AVG(LENGTH), 2) AS AVERAGE_LENGTH
FROM (SELECT CASE WHEN LENGTH IS NULL THEN 10
                  ELSE LENGTH END AS LENGTH
      FROM FISH_INFO) INFO


-- 4. 특정 옵션이 포함된 자동차 리스트 구하기
SELECT *
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%네비게이션%'
ORDER BY CAR_ID DESC


-- 5. 자동차 대여 기록에서 장기/단기 대여 구분하기
SELECT HISTORY_ID,
       CAR_ID,
       DATE_FORMAT(START_DATE, '%Y-%m-%d') AS START_DATE,
       DATE_FORMAT(END_DATE, '%Y-%m-%d') AS END_DATE,
       CASE 
            WHEN DATEDIFF(END_DATE, START_DATE)+1 >= 30 THEN '장기 대여'
            ELSE '단기 대여' 
       END AS RENT_TYPE
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
WHERE DATE_FORMAT(START_DATE, '%Y-%m') = '2022-09'
ORDER BY 1 DESC


-- 6. 가장 비싼 상품 구하기
SELECT MAX(PRICE) AS MAX_PRICE
FROM PRODUCT


-- 7. 나이 정보가 없는 회원 수 구하기
SELECT COUNT(*) AS USERS
FROM USER_INFO
WHERE AGE IS NULL


-- 8. 경기도에 위치한 식품창고 목록 출력하기
SELECT WAREHOUSE_ID,
       WAREHOUSE_NAME,
       ADDRESS,
       CASE 
            WHEN FREEZER_YN IS NULL THEN 'N'
            ELSE FREEZER_YN
       END AS FREEZER_YN
FROM FOOD_WAREHOUSE
WHERE ADDRESS LIKE '%경기도%'
ORDER BY 1


-- 9. 최댓값 구하기
SELECT MAX(DATETIME)
FROM ANIMAL_INS


-- 10. 이름이 있는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NOT NAME IS NULL
ORDER BY 1


-- 11. 이름이 없는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL
ORDER BY 1