USE analyze_db;

DESC TB_PBTRNSP_DATA;
DESC TB_POPLTN;
DESC TB_POPLTN_DATA;

SELECT * FROM TB_PBTRNSP_DATA;
SELECT * FROM TB_POPLTN;
SELECT * FROM TB_POPLTN_DATA;

-- Q. 2023년 4월 기준 전국 주요 시도의 연령대별 인구수 합계를 구하고 연령대별 인구 비율을 구하라.
/* 참고 사항
1) ~별 => group by (혹은 partition by) 사용
	연령대별 => GROUP BY
2) WHERE로 조건 달아준다.
	2023년 4월 & 전국 주요 시도 => WHERE
3) OVER() => 모든 행에 동일한 결과를 적용시켜준다. PARTITION BY로 윈도우 범위 지정 가능.
4) 문제에서 구해야 할 값은 총 2개 (연령대별 인구수 합계 & 연령대별 인구 비율)
	연령대별 인구수 합계 => 000, 010 등 연령대별로 POPLTN_CNT 총합을 구한다.
    연령대별 인구 비율 => 특정 연령대의 SUM(POPLTN_CNT) / SUM(특정 연령대의 SUM(POPLTN_CNT))
5) 우리나라 행정코드는 총 10자리로 이루어져있다. (-- --- -----)
	앞에서부터 차례로 2자리는 시/도, 3자리는 군/구, 5자리는 읍/면/동을 의미한다.
6) T는 Female과 Male의 합
*/

-- (1) 2023년 4월 전국 시도 연령대별 인구수 합계 구하기
SELECT AGRDE_SE_CD,
	   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO LIKE '__00000000'
  AND POPLTN_SE_CD = 'T'
GROUP BY AGRDE_SE_CD
ORDER BY AGRDE_SE_CD;

-- (2) 2023년 4월 전국 시도 연령대별 인구 비율 구하기
-- WITH AS 구문으로만 풀어본 쿼리
-- 서브쿼리에서 조회할 결과를 미리 임시 테이블 형식으로 만들어 놓는 방식 (VIEW와 달리 1회성)
-- 임시로 사용할 내용은 앞에 TEMP, TMP를 붙이는 것이 관례이다.
WITH TMP_AGRDE_CNT AS(
	SELECT AGRDE_SE_CD,
		   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO LIKE '__00000000'
	  AND POPLTN_SE_CD = 'T'
	GROUP BY AGRDE_SE_CD
	ORDER BY AGRDE_SE_CD
),
TMP_SUM_AGRDE_SE_CD AS(
	SELECT AGRDE_SE_CD,
		   AGRDE_POPLTN_CNT,
		   SUM(AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT
	FROM TMP_AGRDE_CNT
)
SELECT AGRDE_SE_CD,
	   AGRDE_POPLTN_CNT,
       SUM_AGRDE_POPLTN_CNT,
       CONCAT(ROUND(AGRDE_POPLTN_CNT / SUM_AGRDE_POPLTN_CNT * 100, 2), '%') AS AGRDE_RATE
FROM TMP_SUM_AGRDE_SE_CD;

-- FROM절에 서브쿼리를 넣는 쿼리 방법
SELECT A.AGRDE_SE_CD, A.AGRDE_POPLTN_CNT,
	   SUM(A.AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT,
       A.AGRDE_POPLTN_CNT / SUM(A.AGRDE_POPLTN_CNT) OVER() AS AGRDE_POPLTN_RATE
FROM(
	SELECT AGRDE_SE_CD,
		   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO LIKE '__00000000'
	  AND POPLTN_SE_CD = 'T'
	GROUP BY AGRDE_SE_CD
	ORDER BY AGRDE_SE_CD
) AS A;



-- Q. 2023년 4월 기준 전국 주요 시/도의 성별 인구수 합계를 구하여 남성/여성 비율을 구하라.
-- (1) 2023년 4월 기준 전국 주요 시도 성별 인구수 합계 구하기
SELECT POPLTN_SE_CD,
	   SUM(POPLTN_CNT) AS SE_POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO LIKE '__00000000'
  AND POPLTN_SE_CD IN ('F', 'M')
GROUP BY POPLTN_SE_CD;

-- (2) 2023년 4월 기준 전국 시도 성별 남성/여성 비율 구하기
-- OVER()이 아닌 피벗테이블을 사용하는 방법
-- 피벗테이블 형태로, 세로로 되어있는 데이터를 가로로 집계한다.
-- 남자인구수와 여자인구수를 셀렉한다 => SELECT절에서 CASE WHEN THEN 구문 사용
WITH TEMP_SE_POPLTN_CNT AS (
	SELECT POPLTN_SE_CD,
		   CASE WHEN POPLTN_SE_CD = 'M' THEN SUM(POPLTN_CNT) ELSE 0 END AS MALE_POPLTN_CNT,
		   CASE WHEN POPLTN_SE_CD = 'F' THEN SUM(POPLTN_CNT) ELSE 0 END AS FEMALE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304' 
		  AND ADMINIST_ZONE_NO LIKE '__00000000'
		  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY POPLTN_SE_CD
),
TEMP_PIVOT_POPLTN_CNT AS (
	SELECT MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
		   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
	FROM TEMP_SE_POPLTN_CNT
)
SELECT MALE_POPLTN_CNT,
       FEMALE_POPLTN_CNT,
       MALE_POPLTN_CNT / FEMALE_POPLTN_CNT AS '남성/여성 비율',
       CONCAT(ROUND(MALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100, 2), '%') AS '전체 인구수 대비 남성 비율',
       CONCAT(ROUND(FEMALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100, 2), '%') AS '전체 인구수 대비 여성 비율'
FROM TEMP_PIVOT_POPLTN_CNT;
       


-- Q. 2023년 4월 기준 전국 읍/면/동 인구수 조회 후 연령대별 인구가 가장 많은 지역을 구하라.
-- 읍면동 == NOT LIKE 시도군구
-- POPLTN_CNT가 0인 지역이 존재해서 WHERE 조건 삽입
-- WHERE절보다 SELECT절의 실행 순서가 먼저이기 때문에 WITH AS 구문으로 테이블 2개를 먼저 정의 후 WHERE POPLTN_RANK = 1 조건 넣어야 한다. 
WITH TEMP_EMD_POPLTN_CNT AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT
	FROM TB_POPLTN
	WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
	  AND POPLTN_SE_CD = 'T'
	  AND STD_MT = '202304'
	  AND POPLTN_CNT > 0
	ORDER BY POPLTN_CNT DESC
),
TEMP_AGRDE_POPLTN_RANK AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   RANK() OVER(PARTITION BY AGRDE_SE_CD ORDER BY POPLTN_CNT DESC) AS POPLTN_RANK
	FROM TEMP_EMD_POPLTN_CNT
)
SELECT * 
FROM TEMP_AGRDE_POPLTN_RANK
WHERE POPLTN_RANK = 1
ORDER BY AGRDE_SE_CD;



-- Q. 2023년 4월 기준 전국 읍/면/동의 연령대별 인구 비율이 가장 높은 지역 조회
-- 필요한 데이터부터 차근차근 만들어나가면서, 안쪽에서 바깥쪽으로 SELECT 절을 쌓아나간다.
WITH TEMP_EMD_POPLTN_CNT AS(
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT
	FROM TB_POPLTN
	WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
	  AND POPLTN_SE_CD = 'T'
	ORDER BY POPLTN_CNT DESC
),
TEMP_AGRDE_RATE AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   CONCAT(ROUND(POPLTN_CNT / SUM(POPLTN_CNT) OVER(PARTITION BY ADMINIST_ZONE_NO) * 100, 4), '%') AS '지역별연령대비비율'
	FROM TEMP_EMD_POPLTN_CNT
),
TEMP_AGRDE_RATE_RANK AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   지역별연령대비비율,
		   RANK() OVER(PARTITION BY AGRDE_SE_CD ORDER BY 지역별연령대비비율 DESC) AS  POPLTN_RATE_RANK
	FROM TEMP_AGRDE_RATE
)
SELECT * 
FROM TEMP_AGRDE_RATE_RANK
WHERE POPLTN_RATE_RANK = 1
ORDER BY AGRDE_SE_CD;
