USE analyze_db;

DESC TB_PBTRNSP_DATA;
DESC TB_POPLTN;
DESC TB_POPLTN_DATA;

SELECT * FROM TB_PBTRNSP_DATA;
SELECT * FROM TB_POPLTN;
SELECT * FROM TB_POPLTN_DATA;

-- Q. 2023년 4월 기준 전국 주요 시도의 연령대별 인구수 합계를 구하고 연령대별 인구 비율을 구하라.
/* 참고 사항
1) ~별 => group by (혹은 partition by) 사용
	연령대별 => GROUP BY
2) WHERE로 조건 달아준다.
	2023년 4월 & 전국 주요 시도 => WHERE
3) OVER() => 모든 행에 동일한 결과를 적용시켜준다. PARTITION BY로 윈도우 범위 지정 가능.
4) 문제에서 구해야 할 값은 총 2개 (연령대별 인구수 합계 & 연령대별 인구 비율)
	연령대별 인구수 합계 => 000, 010 등 연령대별로 POPLTN_CNT 총합을 구한다.
    연령대별 인구 비율 => 특정 연령대의 SUM(POPLTN_CNT) / SUM(특정 연령대의 SUM(POPLTN_CNT))
5) 우리나라 행정코드는 총 10자리로 이루어져있다. (-- --- -----)
	앞에서부터 차례로 2자리는 시/도, 3자리는 군/구, 5자리는 읍/면/동을 의미한다.
6) T는 Female과 Male의 합
*/

-- (1) 2023년 4월 전국 시도 연령대별 인구수 합계 구하기
SELECT AGRDE_SE_CD,
	   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO LIKE '__00000000'
  AND POPLTN_SE_CD = 'T'
GROUP BY AGRDE_SE_CD
ORDER BY AGRDE_SE_CD;

-- (2) 2023년 4월 전국 시도 연령대별 인구 비율 구하기
-- WITH AS 구문으로만 풀어본 쿼리
-- 서브쿼리에서 조회할 결과를 미리 임시 테이블 형식으로 만들어 놓는 방식 (VIEW와 달리 1회성)
-- 임시로 사용할 내용은 앞에 TEMP, TMP를 붙이는 것이 관례이다.
WITH TMP_AGRDE_CNT AS(
	SELECT AGRDE_SE_CD,
		   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO LIKE '__00000000'
	  AND POPLTN_SE_CD = 'T'
	GROUP BY AGRDE_SE_CD
	ORDER BY AGRDE_SE_CD
),
TMP_SUM_AGRDE_SE_CD AS(
	SELECT AGRDE_SE_CD,
		   AGRDE_POPLTN_CNT,
		   SUM(AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT
	FROM TMP_AGRDE_CNT
)
SELECT AGRDE_SE_CD,
	   AGRDE_POPLTN_CNT,
       SUM_AGRDE_POPLTN_CNT,
       CONCAT(ROUND(AGRDE_POPLTN_CNT / SUM_AGRDE_POPLTN_CNT * 100, 2), '%') AS AGRDE_RATE
FROM TMP_SUM_AGRDE_SE_CD;

-- FROM절에 서브쿼리를 넣는 쿼리 방법
SELECT A.AGRDE_SE_CD, A.AGRDE_POPLTN_CNT,
	   SUM(A.AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT,
       A.AGRDE_POPLTN_CNT / SUM(A.AGRDE_POPLTN_CNT) OVER() AS AGRDE_POPLTN_RATE
FROM(
	SELECT AGRDE_SE_CD,
		   SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO LIKE '__00000000'
	  AND POPLTN_SE_CD = 'T'
	GROUP BY AGRDE_SE_CD
	ORDER BY AGRDE_SE_CD
) AS A;



-- Q. 2023년 4월 기준 전국 주요 시/도의 성별 인구수 합계를 구하여 남성/여성 비율을 구하라.
-- (1) 2023년 4월 기준 전국 주요 시도 성별 인구수 합계 구하기
SELECT POPLTN_SE_CD,
	   SUM(POPLTN_CNT) AS SE_POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO LIKE '__00000000'
  AND POPLTN_SE_CD IN ('F', 'M')
GROUP BY POPLTN_SE_CD;

-- (2) 2023년 4월 기준 전국 시도 성별 남성/여성 비율 구하기
-- OVER()이 아닌 피벗테이블을 사용하는 방법
-- 피벗테이블 형태로, 세로로 되어있는 데이터를 가로로 집계한다.
-- 남자인구수와 여자인구수를 셀렉한다 => SELECT절에서 CASE WHEN THEN 구문 사용
WITH TEMP_SE_POPLTN_CNT AS (
	SELECT POPLTN_SE_CD,
		   CASE WHEN POPLTN_SE_CD = 'M' THEN SUM(POPLTN_CNT) ELSE 0 END AS MALE_POPLTN_CNT,
		   CASE WHEN POPLTN_SE_CD = 'F' THEN SUM(POPLTN_CNT) ELSE 0 END AS FEMALE_POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304' 
		  AND ADMINIST_ZONE_NO LIKE '__00000000'
		  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY POPLTN_SE_CD
),
TEMP_PIVOT_POPLTN_CNT AS (
	SELECT MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
		   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
	FROM TEMP_SE_POPLTN_CNT
)
SELECT MALE_POPLTN_CNT,
       FEMALE_POPLTN_CNT,
       MALE_POPLTN_CNT / FEMALE_POPLTN_CNT AS '남성/여성 비율',
       CONCAT(ROUND(MALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100, 2), '%') AS '전체 인구수 대비 남성 비율',
       CONCAT(ROUND(FEMALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100, 2), '%') AS '전체 인구수 대비 여성 비율'
FROM TEMP_PIVOT_POPLTN_CNT;
       


-- Q. 2023년 4월 기준 전국 읍/면/동 인구수 조회 후 연령대별 인구가 가장 많은 지역을 구하라.
-- 읍면동 == NOT LIKE 시도군구
-- POPLTN_CNT가 0인 지역이 존재해서 WHERE 조건 삽입
-- WHERE절보다 SELECT절의 실행 순서가 먼저이기 때문에 WITH AS 구문으로 테이블 2개를 먼저 정의 후 WHERE POPLTN_RANK = 1 조건 넣어야 한다. 
WITH TEMP_EMD_POPLTN_CNT AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT
	FROM TB_POPLTN
	WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
	  AND POPLTN_SE_CD = 'T'
	  AND STD_MT = '202304'
	  AND POPLTN_CNT > 0
	ORDER BY POPLTN_CNT DESC
),
TEMP_AGRDE_POPLTN_RANK AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   RANK() OVER(PARTITION BY AGRDE_SE_CD ORDER BY POPLTN_CNT DESC) AS POPLTN_RANK
	FROM TEMP_EMD_POPLTN_CNT
)
SELECT * 
FROM TEMP_AGRDE_POPLTN_RANK
WHERE POPLTN_RANK = 1
ORDER BY AGRDE_SE_CD;



-- Q. 2023년 4월 기준 전국 읍/면/동의 연령대별 인구 비율이 가장 높은 지역 조회
-- 필요한 데이터부터 차근차근 만들어나가면서, 안쪽에서 바깥쪽으로 SELECT 절을 쌓아나간다.
WITH TEMP_EMD_POPLTN_CNT AS(
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT
	FROM TB_POPLTN
	WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
	  AND POPLTN_SE_CD = 'T'
	ORDER BY POPLTN_CNT DESC
),
TEMP_AGRDE_RATE AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   CONCAT(ROUND(POPLTN_CNT / SUM(POPLTN_CNT) OVER(PARTITION BY ADMINIST_ZONE_NO) * 100, 4), '%') AS '지역별연령대비비율'
	FROM TEMP_EMD_POPLTN_CNT
),
TEMP_AGRDE_RATE_RANK AS (
	SELECT AGRDE_SE_CD,
		   ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_CNT,
		   지역별연령대비비율,
		   RANK() OVER(PARTITION BY AGRDE_SE_CD ORDER BY 지역별연령대비비율 DESC) AS  POPLTN_RATE_RANK
	FROM TEMP_AGRDE_RATE
)
SELECT * 
FROM TEMP_AGRDE_RATE_RANK
WHERE POPLTN_RATE_RANK = 1
ORDER BY AGRDE_SE_CD;



-- Q. 2023년 4월 전국의 각 읍면동 기준 남성의 수보다 여성의 수가 많은 지역 기준 내림차순
-- 남자인구수와 여자인구수를 구한다. (총 구해야할 기반 데이터는 NO, NM, SE_CODE, 인구수)
-- GROUP BY 쓸 때 어떤 데이터가 Reduction 될 것인지를 생각해야 한다.

-- (1) 기반 데이터 조회: 2023년 4월 각 읍면동 기준 남성과 여성의 인구 수
-- 이 경우에는 전체 데이터 1*3(성별)*11(나이대) 에서 성별이 2개로 그룹이 만들어지기 때문에 나이대 데이터가 Reduction된다.
-- 성별로 나이대가 1개가 되기 때문!
SELECT ADMINIST_ZONE_NO,
	   ADMINIST_ZONE_NM,
       POPLTN_SE_CD,
       SUM(POPLTN_CNT) AS POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
  AND POPLTN_SE_CD IN ('F', 'M')
GROUP BY ADMINIST_ZONE_NO, 
	     ADMINIST_ZONE_NM, 
         POPLTN_SE_CD;

-- (2) WITH AS 구문을 이용해 PIVOT 수행
/*
남성과 여성 인구수 컬럼 생성
남성보다 여성의 수가 많은 경우 = 여성-남성 > 0
컬럼화와 코드화가 되어 있으면 직접적인 계산이 아주 쉬워진다. (아주 중요한 포인트, 암기!!) BUT 데이터와 다른 집계를 하기엔 어려워진다.
Pandas 다룰 때 if, for문을 많이 사용하는건 억지로 판다스를 사용하는 것으로, 퍼포먼스가 많이 떨어진다. 단 comprehension은 제외!
데이터를 정확히 다룰 수 있는 노하우가 필요하다! 데이터에 따라 분석 형태가 달리진다.
(중요) 모든 상황에 맞는건 아니지만, 컬럼은 선택에 용이하고 코드는 집계에 용이하다.
코드화된 데이터를 컬럼화로 바꾸는 게 피벗이다.
세로 데이터를 가로로 => 피벗팅(컬럼화) // 가로 데이터를 세로로 => 멜팅(코드화) (공식 용어는 X)
캐글로 데이터를 받아서 분석을 해본다면, 판다스로도 해보고 sql로도 해보는 것을 추천.
엔지니어의 역할은 데이터를 준비하는 것에서 끝. 준비된 데이터를 보고 분석하는 건 애널리스트의 영역.
판다스와 SQL를 자연스럽게 왔다갔다 한다. 이정도 할 줄 알면 현업에서도 능숙하게 가능. 똑같은 주제를 다양한 플랫폼에서 할 수 있어야 함
*/
-- 1차
SELECT ADMINIST_ZONE_NO,
	   ADMINIST_ZONE_NM,
	   POPLTN_SE_CD,
	   SUM(POPLTN_CNT) AS POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
  AND POPLTN_SE_CD IN ('F', 'M')
GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_SE_CD;

-- 2차
WITH TEMP_SE_PIVOT AS (
	SELECT ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_SE_CD,
		   SUM(POPLTN_CNT) AS POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
	  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_SE_CD
)
SELECT ADMINIST_ZONE_NO,
	   ADMINIST_ZONE_NM,
	   IF(POPLTN_SE_CD = 'M', POPLTN_CNT, 0) AS MALE_POPLTN_CNT,
	   IF(POPLTN_SE_CD = 'F', POPLTN_CNT, 0) AS FEMALE_POPLTN_CNT
FROM TEMP_SE_PIVOT;

-- 3차
WITH TEMP_SE_PIVOT AS (
	SELECT ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_SE_CD,
		   SUM(POPLTN_CNT) AS POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
	  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_SE_CD
), TEMP_ADMINIST_REDUCE AS (
	SELECT ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   IF(POPLTN_SE_CD = 'M', POPLTN_CNT, 0) AS MALE_POPLTN_CNT,
		   IF(POPLTN_SE_CD = 'F', POPLTN_CNT, 0) AS FEMALE_POPLTN_CNT
	FROM TEMP_SE_PIVOT
)
SELECT ADMINIST_ZONE_NO, 
	   ADMINIST_ZONE_NM,
	   MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
	   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
FROM TEMP_ADMINIST_REDUCE
GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM;

-- 2023년 4월 전국의 각 읍면동 기준 남성의 수보다 여성의 수가 많은 지역 기준 내림차순
WITH TEMP_SE_PIVOT AS (
	SELECT ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   POPLTN_SE_CD,
		   SUM(POPLTN_CNT) AS POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
	  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_SE_CD
), TEMP_ADMINIST_REDUCE AS (
	SELECT ADMINIST_ZONE_NO,
		   ADMINIST_ZONE_NM,
		   IF(POPLTN_SE_CD = 'M', POPLTN_CNT, 0) AS MALE_POPLTN_CNT,
		   IF(POPLTN_SE_CD = 'F', POPLTN_CNT, 0) AS FEMALE_POPLTN_CNT
	FROM TEMP_SE_PIVOT
), TEMP_ADMINIST_PIVOT AS (
	SELECT ADMINIST_ZONE_NO, 
		   ADMINIST_ZONE_NM,
		   MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
		   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
	FROM TEMP_ADMINIST_REDUCE
	GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM
)
SELECT ADMINIST_ZONE_NO,
	   ADMINIST_ZONE_NM,
       FEMALE_POPLTN_CNT,
       MALE_POPLTN_CNT,
       FEMALE_POPLTN_CNT - MALE_POPLTN_CNT AS FEMALE_MALE_DIFF
FROM TEMP_ADMINIST_PIVOT
WHERE FEMALE_POPLTN_CNT - MALE_POPLTN_CNT > 0
ORDER BY FEMALE_MALE_DIFF DESC;
-- OR LIMIT 10으로도 사용 가능



-- Q1. 전국의 각 읍면동 기준 남성 비율 및 여성 비율이 가장 높거나 낮은 지역 조회
-- Q2. 남성/여성 비율이 가장 높은 지역과 가장 낮은 지역 조회
-- 1) 읍면동 기준으로 남성과 여성 그룹
-- 2) 해당 테이블을 컬럼화 (피벗) 해서 F와 M을 별도 컬럼으로 생성
-- 3) F+M 컬럼 다시 생성

-- (1) 전국의 각 읍면동 기준 남성 비율 및 여성 비율이 가장 높거나 낮은 지역 구하기
WITH TEMP_GENDER AS (
	SELECT ADMINIST_ZONE_NM, 
		   POPLTN_SE_CD,
		   SUM(POPLTN_CNT) AS POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
	  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY ADMINIST_ZONE_NM, POPLTN_SE_CD
), TEMP_GENDER_CNT AS (
	SELECT ADMINIST_ZONE_NM,
		   IF (POPLTN_SE_CD='F', POPLTN_CNT, 0) AS FEMALE_POPLTN_CNT,
		   IF (POPLTN_SE_CD='M', POPLTN_CNT, 0) AS MALE_POPLTN_CNT
	FROM TEMP_GENDER
    WHERE POPLTN_CNT > 0
), TEMP_GENDER_PIVOT AS (
	SELECT ADMINIST_ZONE_NM,
		   MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
		   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
	FROM TEMP_GENDER_CNT
	GROUP BY ADMINIST_ZONE_NM
), TEMP_GENDER_RATIO AS (
	SELECT ADMINIST_ZONE_NM,
		   MALE_POPLTN_CNT,
		   FEMALE_POPLTN_CNT,
		   MALE_POPLTN_CNT + FEMALE_POPLTN_CNT AS TOTAL_POPLTN_CNT,
		   MALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100 AS 'MALE_RATIO',
		   FEMALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100 AS 'FEMALE_RATIO'
	FROM TEMP_GENDER_PIVOT
	GROUP BY ADMINIST_ZONE_NM
), TEMP_GENDER_RANK AS (
	SELECT ADMINIST_ZONE_NM,
		   MALE_POPLTN_CNT,
		   FEMALE_POPLTN_CNT,
		   TOTAL_POPLTN_CNT,
		   MALE_RATIO,
		   FEMALE_RATIO,
		   RANK() OVER(ORDER BY MALE_RATIO DESC) AS MALE_HIGH_RANK,
		   RANK() OVER(ORDER BY FEMALE_RATIO DESC) AS FEMALE_HIGH_RANK,
		   RANK() OVER(ORDER BY MALE_RATIO ASC) AS MALE_LOW_RANK,
		   RANK() OVER(ORDER BY FEMALE_RATIO ASC) AS FEMALE_LOW_RANK
	FROM TEMP_GENDER_RATIO
	GROUP BY ADMINIST_ZONE_NM
)
SELECT * 
FROM TEMP_GENDER_RANK
WHERE MALE_HIGH_RANK = 1 OR FEMALE_HIGH_RANK = 1 OR MALE_LOW_RANK = 1 OR FEMALE_LOW_RANK = 1
;

-- (2) 전국의 각 읍면동 기준 남성 비율 및 여성 비율이 가장 높거나 낮은 지역 조회 후 남성/여성 비율이 가장 높은 지역과 가장 낮은 지역 구하기
WITH TEMP_GENDER AS (
	SELECT ADMINIST_ZONE_NM, 
		   POPLTN_SE_CD,
		   SUM(POPLTN_CNT) AS POPLTN_CNT
	FROM TB_POPLTN
	WHERE STD_MT = '202304'
	  AND ADMINIST_ZONE_NO NOT LIkE '_____00000'
	  AND POPLTN_SE_CD IN ('F', 'M')
	GROUP BY ADMINIST_ZONE_NM, POPLTN_SE_CD
), TEMP_GENDER_CNT AS (
	SELECT ADMINIST_ZONE_NM,
		   IF (POPLTN_SE_CD='F', POPLTN_CNT, 0) AS FEMALE_POPLTN_CNT,
		   IF (POPLTN_SE_CD='M', POPLTN_CNT, 0) AS MALE_POPLTN_CNT
	FROM TEMP_GENDER
    WHERE POPLTN_CNT > 0
), TEMP_GENDER_PIVOT AS (
	SELECT ADMINIST_ZONE_NM,
		   MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
		   MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
	FROM TEMP_GENDER_CNT
	GROUP BY ADMINIST_ZONE_NM
), TEMP_GENDER_RATIO AS (
	SELECT ADMINIST_ZONE_NM,
		   MALE_POPLTN_CNT,
		   FEMALE_POPLTN_CNT,
		   MALE_POPLTN_CNT + FEMALE_POPLTN_CNT AS TOTAL_POPLTN_CNT,
		   MALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100 AS MALE_RATIO,
		   FEMALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) * 100 AS FEMALE_RATIO,
		   MALE_POPLTN_CNT / FEMALE_POPLTN_CNT *100 AS MALE_FEMALE_RATIO
	FROM TEMP_GENDER_PIVOT
	GROUP BY ADMINIST_ZONE_NM
), TEMP_GENDER_RANK AS (
	SELECT ADMINIST_ZONE_NM,
		   MALE_POPLTN_CNT,
		   FEMALE_POPLTN_CNT,
		   TOTAL_POPLTN_CNT,
		   MALE_RATIO,
		   FEMALE_RATIO,
		   MALE_FEMALE_RATIO,
		   RANK() OVER(ORDER BY MALE_FEMALE_RATIO DESC) AS MALE_FEMALE_HIGH_RATIO,
		   RANK() OVER(ORDER BY MALE_FEMALE_RATIO ASC) AS MALE_FEMALE_LOW_RATIO,
		   RANK() OVER(ORDER BY MALE_RATIO DESC) AS MALE_HIGH_RANK,
		   RANK() OVER(ORDER BY FEMALE_RATIO DESC) AS FEMALE_HIGH_RANK,
		   RANK() OVER(ORDER BY MALE_RATIO ASC) AS MALE_LOW_RANK,
		   RANK() OVER(ORDER BY FEMALE_RATIO ASC) AS FEMALE_LOW_RANK
	FROM TEMP_GENDER_RATIO
)
SELECT ADMINIST_ZONE_NM AS '지역',
	   CONCAT(ROUND(MALE_RATIO, 2), '%') AS '남성 비율',
	   CONCAT(ROUND(FEMALE_RATIO, 2), '%') AS '여성 비율', 
       CONCAT(ROUND(MALE_FEMALE_RATIO, 2), '%') AS '남성/여성 비율',
       MALE_FEMALE_HIGH_RATIO AS '가장 높은 남성/여성 비율',
       MALE_FEMALE_LOW_RATIO AS '가장 낮은 남성/여성 비율',
       MALE_HIGH_RANK AS '가장 높은 남성 비율',
       MALE_LOW_RANK AS '가장 낮은 남성 비율',
       FEMALE_HIGH_RANK AS '가장 높은 여성 비율',
       FEMALE_LOW_RANK AS '가장 낮은 여성 비율'
FROM TEMP_GENDER_RANK
WHERE MALE_FEMALE_HIGH_RATIO = 1 
   OR MALE_FEMALE_LOW_RATIO = 1
   OR MALE_HIGH_RANK = 1 
   OR FEMALE_HIGH_RANK = 1 
   OR MALE_LOW_RANK = 1 
   OR FEMALE_LOW_RANK = 1;
   
-- (3) 강사님 풀이
WITH TEMP_POPLTN_CNT AS (
    SELECT
         A.ADMINIST_ZONE_NO,
         A.ADMINIST_ZONE_NM,
         A.POPLTN_SE_CD,
         SUM(A.POPLTN_CNT) AS POPLTN_CNT
    FROM TB_POPLTN A
    WHERE A.ADMINIST_ZONE_NO NOT LIKE '_____00000'
    AND A.POPLTN_SE_CD IN ('M', 'F')
    AND A.STD_MT = '202304'
    AND A.POPLTN_CNT > 0
    GROUP BY A.ADMINIST_ZONE_NO, A.ADMINIST_ZONE_NM, A.POPLTN_SE_CD
    ORDER BY A.ADMINIST_ZONE_NO, A.POPLTN_SE_CD
), TEMP_SE_CNT_PIVOT AS (
    SELECT ADMINIST_ZONE_NO,
           ADMINIST_ZONE_NM,
           CASE WHEN POPLTN_SE_CD = 'M' THEN POPLTN_CNT ELSE 0 END AS MALE_POPLTN_CNT,
           CASE WHEN POPLTN_SE_CD = 'F' THEN POPLTN_CNT ELSE 0 END AS FEMALE_POPLTN_CNT
    FROM TEMP_POPLTN_CNT
), TEMP_SE_CNT_PIVOT_REDUCE AS (
    SELECT ADMINIST_ZONE_NO,
           ADMINIST_ZONE_NM,
           MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
           MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT,
           MAX(MALE_POPLTN_CNT) + MAX(FEMALE_POPLTN_CNT) AS TOT_POPLTN_CNT
    FROM TEMP_SE_CNT_PIVOT
    GROUP BY ADMINIST_ZONE_NO, ADMINIST_ZONE_NM
), TEMP_SE_CNT_RATE AS (
    SELECT ADMINIST_ZONE_NO,
           ADMINIST_ZONE_NM,
           MALE_POPLTN_CNT,
           FEMALE_POPLTN_CNT,
           MALE_POPLTN_CNT / TOT_POPLTN_CNT AS "남성인구비율",
           FEMALE_POPLTN_CNT / TOT_POPLTN_CNT AS "여성인구비율",
           RANK() OVER (ORDER BY MALE_POPLTN_CNT / TOT_POPLTN_CNT) AS MALE_RATE_ASC,
           RANK() OVER (ORDER BY FEMALE_POPLTN_CNT / TOT_POPLTN_CNT) AS FEMALE_RATE_ASC,
           RANK() OVER (ORDER BY MALE_POPLTN_CNT / TOT_POPLTN_CNT DESC) AS MALE_RATE_DESC,
           RANK() OVER (ORDER BY FEMALE_POPLTN_CNT / TOT_POPLTN_CNT DESC) AS FEMALE_RATE_DESC
    FROM TEMP_SE_CNT_PIVOT_REDUCE
)
SELECT ADMINIST_ZONE_NO,
       ADMINIST_ZONE_NM,
       MALE_POPLTN_CNT,
       FEMALE_POPLTN_CNT,
       남성인구비율, 여성인구비율
FROM TEMP_SE_CNT_RATE
WHERE MALE_RATE_ASC = 1 OR FEMALE_RATE_ASC = 1 OR MALE_RATE_DESC = 1 OR FEMALE_RATE_DESC = 1;